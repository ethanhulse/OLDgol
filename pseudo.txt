Project: gol [CONWAYS GAME OF LIFE]
Author: Ethan Hulse ethanhulse.work@gmail.com
Language: C++
Libraries: SFML





Synopsis: 
    Provide visual representation of Conway's Game of Life automaton. 

    Ruleset:
        Any live cell with fewer than two live neighbours dies, as if by underpopulation.
        Any live cell with two or three live neighbours lives on to the next generation.
        Any live cell with more than three live neighbours dies, as if by overpopulation.
        Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.

        These rules, which compare the behavior of the automaton to real life, can be condensed into the following:

        Any live cell with two or three live neighbours survives.
        Any dead cell with three live neighbours becomes a live cell.
        All other live cells die in the next generation. Similarly, all other dead cells stay dead.


        let i = current_cell
        if i.lives() == true
            if 2 >= i.neighbours_alive() <= 3
                continue
            else
                i.lives() = false 
        else if i.lives() == false
            if i.neighbours_alive == 3
                i.lives = true


        Matrix representation of "life grid" where 0 = false/dead and 1 = true/alive
       
        0 0 0 0 0
        0 0 1 1 0
        0 0 1 0 0
        0 0 0 0 0
        0 0 0 0 0

        int tuples represent each point. each point has a binary or boolean value

        cell {0 , 10} = true/false where true is alive or 1      
        
        Reference cells with tuple from map of cell booleans.

        Map of booleans
        map {0,1,1,0,0,0,1,1,1}


        bool Grid0[int gridsize+1,int gridsize+1] = {}


        Create Grid0 and Grid1

        copy grid0 to Grid1

        Check cardinals of each cell on Grid1 to count number of live cells
        Take live cell count of Grid1 and apply to corresponding cells on grid0

        I think this ensures one grid is checked before any cells get altered. Write protection of sorts.
        Ensures all data is read from grid before any data is altered. 

